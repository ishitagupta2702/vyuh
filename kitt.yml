setup:
  releaseRefs: ["main"]

owner:
  group: 

alerts:
  slackChannel:
    - vyuh

notify:
  slack:
    channelName: vyuh

build:
  looper:
    enableDockerNoCache: false
    enableDockerClean: false
  docker:
    app:
      dockerFile: Dockerfile
      buildArgs:
        skipCodeCoverage: true
        enableTestReporting: false

deploy:
  releaseType:
    strategy: normal
    rollbackOnError: true
  namespace: vyuh
  helm:
    values:
      global:
        metrics:
          enabled: true
          goldenSignalsAggregation: true
          remoteWriteSampleLimit: 250
          endpoints:
            - targetPort: 8080
              path: "/metrics"
          whitelist:
            - http_server_requests_seconds_sum
            - http_server_requests_seconds_count
            - python_gc_objects_collected
            - python_gc_objects_uncollectable
            - python_gc_collections
            - processTime_seconds_sum:rate2m
            - processTime_seconds_count:rate2m
            - c4XX_total:rate2m
            - c5XX_total:rate2m
            - processTime_seconds_min:min
            - processTime_seconds_max:max
            - processTime_seconds:avg
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1
      metadata:
        labels:
          wm.app: vyuh
          wm.env: stage
          ccm.serviceId: vyuh
          ccm.serviceConfigVersion: "1.0"
          wm.tlsmode: DISABLE
      startupProbe:
        enabled: "true"
        path: "/health"
        wait: 30
        timeout: 3
        probeInterval: 5
        failureThreshold: 20           
      readinessProbe:
        enabled: "true"      
        path: /health
        wait: 0
        timeout: 3
        probeInterval: 10
        failureThreshold: 4        
      livenessProbe:
        path: /health
        wait: 1
        timeout: 3
        probeInterval: 10
        failureThreshold: 6        
      min:
        cpu: 1
        memory: 4Gi
      max:
        cpu: 4
        memory: 16Gi
      secrets:
        file_refresh: true
        akeyless: true
        config:
          akeyless:
            path: 
        files:
          - destination: x-api-key.txt
            content: identity-crew/{{$.kittExec.currentStage.name}}/x-api-key
      networking:
        httpsEnabled: true
        httpEnabled: true
        pathPrefix: /
        externalPort: 8080
        internalPort: 8080
        ports:
          http:
            internalPort: 8080
            externalPort: 8080
            protocol: TCP
  gslb:
    clusterProfiles:
      stage:
        cname: identity-crew.stage.walmart.com

  stages:
    - name: stage
      refs: [main]
      rollbackOnError: true
      target:
        - cluster_id: [cluster-id]
      helm:
        values:
          scaling:
            enabled: true
            cpuPercent: 80
            min: 1
            max: 1
          env:
            ENV: stage
            PORT: 8080
            MODEL: 
            BASE_URL: 
            appName: vyuh
            WM_APP_VERSION: "{{$.kitt.build.version}}"
            TRACE_CONSOLE_EXPORTER: "false"
            OTEL_EXPORTER_OTLP_TRACES_INSECURE: "true"
            SRE_APP_NAME: vyuh
            environment: stage
            profile: '{{$.kittExec.currentCluster.profile}}'
            appVersion: '{{cookiecutter.version}}'
            SRE_CLUSTER_ID: '{{$.kittExec.currentCluster.clusterId}}'
            provider: '{{$.kittExec.currentCluster.clusterId}}'
            SRE_NAMESPACE: '{{$.kitt.deploy.namespace}}'
            SRE_CLUSTER_SITE: '{{$.kittExec.currentCluster.site}}'
            hostIp: '{{$.kittExec.currentCluster.hosts}}'
          global:
            flagger:
              enabled: false
            annotations:
              sidecar.istio.io/inject: "true"
              traffic.sidecar.istio.io/excludeOutboundPorts: 8080
